<% layout('./layout-part') %>
<%~ includeFile('./topbar-part', it) %>




<div id="wrapper" class="w-100 h-100 d-flex" >

    <%~ includeFile('./sidebar-part', it) %>

    <div id="content" class="fadeinslow">
        <div class="btn btn-danger">Exam starten</div>
        <div class="btn btn-info" onclick="toggleUpload()">Datei senden</div>
        <div class="btn btn-info" onclick="getFiles('all')">Abgabe holen</div>
        <div class="btn btn-info">Exam beenden</div>
        <div class="btn btn-info" onclick="task1()">Trigger Script</div>
        <div class="btn btn-light">  Name: <%= it.servername %> </div>
        <div class="btn btn-light">  Pin: <%= it.pin %>  </div>
        <div id="studentslist" class="placeholder p-1"> </div>
    </div>

    <div id="uploaddiv" class="fadeinslow">
        <form id="uploadform" method="POST" action="http://localhost:3000/server/data/send/all" enctype="multipart/form-data">
            <div class="mb-3">
                <label for="formFileMultiple" class="form-label">Send Files to ALL Clients</label>
                <input class="form-control" type="file" name="file" id="formFileMultiple" multiple>
                <input class="form-control" type="hidden" name="csrfservertoken" id="csrfservertoken" value="<%= it.csrfservertoken%>">
                <input class="form-control" type="hidden" name="servername" id="servername" value="<%= it.servername%>">
            </div>
            <input type="submit" name="submit" class="btn btn-info"/>
            <span id="status"></span> 
        </form>
    </div>

</div>





<script>
   
    const csrfservertoken = `<%= it.csrfservertoken%>`;
    const servername =  `<%= it.servername%>`;
    let studentList = [];

    $(document).ready(function() {  
        //make upload div visisble
        $('#uploadform').submit(function(e) {  
            e.preventDefault(); // avoid to actual submit the form data
            $("#status").empty().text("File is uploading...");

            
            $(this).ajaxSubmit({  
                error: function(xhr) {  
                    console.log('Error: ' + xhr.status);  
                },  
                success: function(response) {  
                    console.log(response)  
                    $("#status").empty().text(response.status); 
                    if (response.status === "done") {setTimeout(toggleUpload, 2000);  } 
                }  
            });  
        }); 
    });  

    // get finished exams from students
    async function getFiles(who){
        if (who == "all"){
            if ( studentList.length <= 0 ) { console.log("no clients connected") }
            else {  
                console.log("Requesting Filetransfer from ALL Clients")
                studentList.forEach( (student) => {
                    fetch(`http://${student.clientip}:3000/client/data/abgabe/send/${student.token}`)
                    .then( response => response.json() )
                    .then( async (data) => {
                        console.log(data) 
                    });
                });
            }
        }
    }

    // dummy task to show that scripts in other languages can be started on clients
    function task1(){
        fetch("http://localhost:3000/client/control/cmd")
        .then( response => response.json() )
        .then( async (data) => {
               console.log(data);
        });
    }

    //validate a specific token
    async function task2(token, ip){
        await fetch(`http://${ip}:3000/client/control/tokencheck/${token}`)
        .then( response => response.json() )
        .then( async (data) => {
               console.log(data);
        });
    }

    // Update Students List
    async function getStudentlist(){
        // TODO: do not refresh the whole widget list everytime.. just add new widgets and refresh the screenshots !
        await fetch(`http://localhost:3000/server/control/studentlist/${servername}/${csrfservertoken}`)
        .then( response => response.json() )
        .then( data => {
            studentList = data
            let html = "";
            data.forEach( row => {
                html += `<div class="studentwidget btn btn-info btn-block" onclick='task2("${row.token}","${row.clientip}" )'>
                                Name: ${row.clientname} <br>  
                                Token: ${row.token}  <br>
                                IP:  ${row.clientip}  <br> 
                                Lastseen:  ${row.timestamp}  <br> 
                                <img src='/files/${row.token}.jpg' onerror="this.src='/img/icons/nouserscreenshot.png'">
                            </div>`;
            });
            document.getElementById("studentslist").innerHTML = html;
        });
    }
    getStudentlist();
    setInterval(() => { getStudentlist() }, 2000)

    // implementing a sleep (wait) function
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    // make upload div visible or hide it
    function toggleUpload(){
        let status =  $("#uploaddiv").css("display");
        if (status == "none") {  
            $("#uploaddiv").css("display","block");
            $("#formFileMultiple").val('') 
        }
        else {  $("#uploaddiv").css("display","none"); }
    }

    // manipulate css
    $(".nav").find(".active").removeClass("active");
     $("#overview").addClass("active");

</script>